#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ Tor –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö –¥–ª—è iOS

TOR_SRC="tor-0.4.8.19"
TOR_FIXED="tor-ios-fixed"

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ Tor –¥–ª—è iOS..."

# –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫–∏
rm -rf "$TOR_FIXED"
cp -R "$TOR_SRC" "$TOR_FIXED"

cd "$TOR_FIXED"

# 1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å torint.h - —É–±—Ä–∞—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ssize_t
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ src/lib/cc/torint.h..."
cat > src/lib/cc/torint.h.new << 'EOF'
#ifndef TOR_TORINT_H
#define TOR_TORINT_H

#include <stdint.h>
#include <sys/types.h>

/* Use system ssize_t on iOS */
/* #define ssize_t - already defined by system */

#endif
EOF
mv src/lib/cc/torint.h.new src/lib/cc/torint.h

# 2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å compat_compiler.h - —É–±—Ä–∞—Ç—å –æ—à–∏–±–∫–∏ assertions
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ src/lib/cc/compat_compiler.h..."
sed -i '' 's/#error "Your platform does not represent NULL as zero.*"/\/\* NULL check disabled for iOS \*\//' src/lib/cc/compat_compiler.h || true
sed -i '' 's/#error "Your platform does not represent 0.0 as zeros.*"/\/\* 0.0 check disabled for iOS \*\//' src/lib/cc/compat_compiler.h || true
sed -i '' 's/#error "Your platform.*arithmetic.*"/\/\* arithmetic check disabled for iOS \*\//' src/lib/cc/compat_compiler.h || true

# 3. –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Ñ–∞–π–ª—ã
echo "  üìù –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f src/ext/strlcpy.c
rm -f src/ext/strlcat.c  
rm -f src/ext/getdelim.c
rm -f src/ext/readpassphrase.c

# 4. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤–∫–ª—é—á–µ–Ω–∏—è equix
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ equix includes..."
find src/ext/equix -name "*.c" -exec sed -i '' 's/#include <equix\.h>/#include "..\/..\/..\/ext\/equix\/include\/equix.h"/' {} \;

# 5. –î–æ–±–∞–≤–∏—Ç—å SIZEOF_SOCKLEN_T –≤ orconfig.h
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SIZEOF_SOCKLEN_T –≤ orconfig.h..."
if ! grep -q "SIZEOF_SOCKLEN_T" orconfig.h; then
    sed -i '' '/^#define SIZEOF_UINT64_T 8$/a\
#define SIZEOF_SOCKLEN_T 4
' orconfig.h
    echo "    ‚úÖ SIZEOF_SOCKLEN_T –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "    ‚ÑπÔ∏è  SIZEOF_SOCKLEN_T —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 6. –î–æ–±–∞–≤–∏—Ç—å includes –¥–ª—è bool –∏ timeval –≤ orconfig.h
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ orconfig.h –¥–ª—è main.c..."
if ! grep -q "#include <stdbool.h>" orconfig.h; then
    sed -i '' '/#define TOR_ORCONFIG_H$/a\
\
/* Include stdbool.h first for bool type */\
#include <stdbool.h>\
#include <sys/time.h>
' orconfig.h
    echo "    ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã includes –¥–ª—è bool –∏ timeval"
else
    echo "    ‚ÑπÔ∏è  Includes —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
fi

# 7. –ò—Å–ø—Ä–∞–≤–∏—Ç—å HAVE_SYSTEMD –∏ –¥–æ–±–∞–≤–∏—Ç—å HAVE_STRUCT_TIMEVAL
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HAVE_SYSTEMD –∏ timeval..."
sed -i '' 's/#define HAVE_SYSTEMD 0/\/* #undef HAVE_SYSTEMD *\//' orconfig.h
if ! grep -q "HAVE_STRUCT_TIMEVAL_TV_SEC" orconfig.h; then
    sed -i '' '/USE_BUFFEREVENTS/a\
\
/* timeval structure */\
#define HAVE_STRUCT_TIMEVAL_TV_SEC 1\
#define HAVE_STRUCT_TIMEVAL_TV_USEC 1
' orconfig.h
    echo "    ‚úÖ HAVE_STRUCT_TIMEVAL –¥–æ–±–∞–≤–ª–µ–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  HAVE_STRUCT_TIMEVAL —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã"
fi

# 8. –î–æ–±–∞–≤–∏—Ç—å HAVE_LIMITS_H –¥–ª—è INT_MIN/INT_MAX
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ HAVE_LIMITS_H..."
if ! grep -q "HAVE_LIMITS_H" orconfig.h; then
    sed -i '' '/^#define HAVE_GLOB_H 1$/a\
#define HAVE_LIMITS_H 1
' orconfig.h
    echo "    ‚úÖ HAVE_LIMITS_H –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "    ‚ÑπÔ∏è  HAVE_LIMITS_H —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 9. –î–æ–±–∞–≤–∏—Ç—å #include <limits.h> –≤ type_defs.c
echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ type_defs.c..."
if ! grep -q "#include <limits.h>" src/lib/confmgt/type_defs.c; then
    sed -i '' '/#include "orconfig.h"/a\
#include <limits.h>
' src/lib/confmgt/type_defs.c
    echo "    ‚úÖ #include <limits.h> –¥–æ–±–∞–≤–ª–µ–Ω –≤ type_defs.c"
else
    echo "    ‚ÑπÔ∏è  limits.h —É–∂–µ –≤–∫–ª—é—á–µ–Ω –≤ type_defs.c"
fi

# 10. –î–æ–±–∞–≤–∏—Ç—å TIME_MAX –¥–ª—è connection_edge.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ TIME_MAX..."
if ! grep -q "TIME_MAX" orconfig.h; then
    sed -i '' '/^#define SIZEOF_SOCKLEN_T 4$/a\
\
/* time_t is 64-bit on iOS, so TIME_MAX is INT64_MAX */\
#ifndef TIME_MAX\
#define TIME_MAX INT64_MAX\
#endif
' orconfig.h
    echo "    ‚úÖ TIME_MAX –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "    ‚ÑπÔ∏è  TIME_MAX —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 11. –î–æ–±–∞–≤–∏—Ç—å TOR_PRIuSZ –¥–ª—è circuitlist.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ TOR_PRIuSZ..."
if ! grep -q "TOR_PRIuSZ" orconfig.h; then
    sed -i '' '/^#endif$/a\
\
/* Printf format for size_t */\
#ifndef TOR_PRIuSZ\
#define TOR_PRIuSZ "zu"\
#endif\
#ifndef TOR_PRIdSZ\
#define TOR_PRIdSZ "zd"\
#endif
' orconfig.h
    echo "    ‚úÖ TOR_PRIuSZ –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "    ‚ÑπÔ∏è  TOR_PRIuSZ —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 12. –î–æ–±–∞–≤–∏—Ç—å INT_MAX/INT_MIN/UINT_MAX –¥–ª—è binascii.c –∏ crypto_rand_numeric.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ INT_MAX/INT_MIN/UINT_MAX..."
if ! grep -q "^#ifndef INT_MAX" orconfig.h; then
    sed -i '' '/^#define SIZEOF_SSIZE_T 8$/a\
\
/* INT_MAX for 32-bit int on iOS */\
#ifndef INT_MAX\
#define INT_MAX 2147483647\
#endif\
#ifndef INT_MIN\
#define INT_MIN (-INT_MAX - 1)\
#endif\
#ifndef UINT_MAX\
#define UINT_MAX 4294967295U\
#endif
' orconfig.h
    echo "    ‚úÖ INT_MAX/INT_MIN/UINT_MAX –¥–æ–±–∞–≤–ª–µ–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  INT_MAX —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 13. –î–æ–±–∞–≤–∏—Ç—å SSIZE_MAX –∏ SIZE_T_CEILING –¥–ª—è binascii.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SSIZE_MAX –∏ SIZE_T_CEILING..."
if ! grep -q "SSIZE_MAX" orconfig.h; then
    sed -i '' '/^#define SIZEOF_SOCKLEN_T 4$/a\
#define SIZEOF_SSIZE_T 8
' orconfig.h
    sed -i '' '/^#define TIME_MAX INT64_MAX$/a\
\
/* ssize_t is 64-bit on iOS (signed size_t) */\
#ifndef SSIZE_MAX\
#define SSIZE_MAX INT64_MAX\
#endif\
\
/* SIZE_T_CEILING and SSIZE_T_CEILING for overflow checks */\
#ifndef SIZE_T_CEILING\
#define SIZE_T_CEILING ((size_t)(SSIZE_MAX-16))\
#endif\
#ifndef SSIZE_T_CEILING\
#define SSIZE_T_CEILING ((ssize_t)(SSIZE_MAX-16))\
#endif
' orconfig.h
    echo "    ‚úÖ SSIZE_MAX –∏ SIZE_T_CEILING –¥–æ–±–∞–≤–ª–µ–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  SSIZE_MAX —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 14. –î–æ–±–∞–≤–∏—Ç—å SHARE_DATADIR, CONFDIR –∏ COMPILER_VENDOR –¥–ª—è config.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SHARE_DATADIR, CONFDIR –∏ COMPILER_VENDOR..."
if ! grep -q "SHARE_DATADIR" orconfig.h; then
    sed -i '' '/^#define WORDS_BIGENDIAN 0$/a\
\
/* Paths for iOS (not used, but required for compilation) */\
#ifndef SHARE_DATADIR\
#define SHARE_DATADIR "/usr/share"\
#endif\
#ifndef CONFDIR\
#define CONFDIR "/etc/tor"\
#endif\
\
/* Compiler info (not accurate, but required for compilation) */\
#ifndef COMPILER_VENDOR\
#define COMPILER_VENDOR "apple"\
#endif
' orconfig.h
    echo "    ‚úÖ SHARE_DATADIR, CONFDIR –∏ COMPILER_VENDOR –¥–æ–±–∞–≤–ª–µ–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  SHARE_DATADIR —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

# 15. –î–æ–±–∞–≤–∏—Ç—å HAVE_UTIME –∏ HAVE_GETDELIM –¥–ª—è files.c
echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ HAVE_UTIME –∏ HAVE_GETDELIM..."
if ! grep -q "HAVE_GETDELIM" orconfig.h; then
    sed -i '' '/^#define HAVE_UNAME 1$/a\
#define HAVE_GETDELIM 1
' orconfig.h
    sed -i '' '/^#define HAVE_SYSCONF 1$/a\
#define HAVE_UTIME_H 1\
#define HAVE_UTIME 1
' orconfig.h
    echo "    ‚úÖ HAVE_UTIME –∏ HAVE_GETDELIM –¥–æ–±–∞–≤–ª–µ–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  HAVE_GETDELIM —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
fi

cd ..

echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –≤ $TOR_FIXED/"
echo ""
echo "–¢–µ–ø–µ—Ä—å –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é..."

